[
			"Name",
			"Creation-Time",
			"Last-Modified",
			"Etag",
			"Content-Length",
			"Content-Type",
			"Content-Encoding",
			"Content-Language",
			"Content-CRC64",
			"Content-MD5",
			"Cache-Control",
			"Content-Disposition",
			"BlobType",
			"AccessTier",
			"AccessTierChangeTime",
			"AccessTierInferred",
			"Expiry-Time",
			"hdi_isfolder",
			"Owner",
			"Group",
			"Permissions",
			"Acl",
			"Snapshot",
			"Metadata",
			"LastAccessTime",
			"LeaseStatus",
			"LeaseState",
			"LeaseDuration",
			"ServerEncrypted",
			"CustomerProvidedKeySha256",
			"RehydratePriority",
			"ArchiveStatus",
			"EncryptionScope",
			"CopyId",
			"CopyStatus",
			"CopySource",
			"CopyProgress",
			"CopyCompletionTime",
			"CopyStatusDescription",
			"ImmutabilityPolicyUntilDate",
			"ImmutabilityPolicyMode",
			"LegalHold",
			"DeletionId",
			"Deleted",
			"DeletedTime",
			"RemainingRetentionDays"
		]

// Définir un seuil d'inactivité à 60 jours
let inactivityThreshold = 60d;
// Remplacez "YourStorageTable" par le nom de votre table d'inventaire
YourStorageTable
| where hdi_isfolder == false  // Exclure les dossiers
| extend IdleDays = now() - LastAccessTime  // Calculer la durée d'inactivité en jours
| where isnotnull(LastAccessTime) and LastAccessTime < ago(inactivityThreshold)  // Filtrer sur l'inactivité
| where AccessTier in ("Hot", "Cool")  // Considérer uniquement les niveaux coûteux
| where ['Content-Length'] > 1048576  // Filtrer sur les blobs > 1 Mo (modifiable)
| project Name, ['Content-Length'], LastAccessTime, IdleDays, AccessTier, ['AccessTierChangeTime']
| order by IdleDays desc


let inactivityThreshold = 60d;
YourStorageTable
| where hdi_isfolder == false
| extend IdleDays = now() - LastAccessTime
| where isnotnull(LastAccessTime) and LastAccessTime < ago(inactivityThreshold)
| where AccessTier in ("Hot", "Cool")
| summarize TotalSizeBytes = sum(['Content-Length']), BlobCount = count() by AccessTier
| order by TotalSizeBytes desc

