AzureDiagnostics
| where Category == "ApplicationGatewayAccessLog"
| where TimeGenerated >= ago(24h)
| where requestUri_s contains "blueway"
//
// On crée nos colonnes calculées
| extend 
    // 'timeTaken_d' supposé être en millisecondes
    DurationMs = timeTaken_d, 
    // On calcule l'heure de début (approx) = fin - durée
    StartTime = TimeGenerated - totimespan(DurationMs * 1ms),
    EndTime = TimeGenerated
//
// On sélectionne les transactions dont la durée > 10s
| where DurationMs > 10000
//
// On projette les champs utiles 
| project 
    transactionId_g,
    StartTime,
    EndTime,
    DurationMs,
    clientIP_s,
    backendIPAddress_s,
    httpStatus_d,
    backendHttpStatus_d,
    requestUri_s
| order by EndTime desc




//
// 1) Préparer un bloc (let) pour AGW
//
let AGWLogs = AzureDiagnostics
| where Category == "ApplicationGatewayAccessLog"
| where TimeGenerated >= ago(24h)
| extend
    DurationMs_AGW  = timeTaken_d,
    StartTime_AGW   = TimeGenerated - totimespan(DurationMs_AGW * 1ms),
    EndTime_AGW     = TimeGenerated
| project
    AGW_TransactionId = transactionId_g,
    StartTime_AGW,
    EndTime_AGW,
    DurationMs_AGW,
    requestUri_s,
    clientIP_s,
    backendIPAddress_s;

//
// 2) Préparer un bloc (let) pour APIM
//
let APIMLogs = AzureDiagnostics
| where Category == "GatewayLogs" // ou "ApiManagementGatewayLogs"
| where TimeGenerated >= ago(24h)
| extend
    DurationMs_APIM = timeTaken_d,
    StartTime_APIM  = TimeGenerated - totimespan(DurationMs_APIM * 1ms),
    EndTime_APIM    = TimeGenerated
| project
    APIM_CorrelationId = correlationId_s,  // Nom fictif - adapter selon vos logs
    StartTime_APIM,
    EndTime_APIM,
    DurationMs_APIM,
    apimRequestUri_s = requestUri_s,
    callerIpAddress_s;

//
// 3) Joindre AGW et APIM (via transaction ID <-> correlation ID)
//
AGWLogs
| join kind=inner APIMLogs on $left.AGW_TransactionId == $right.APIM_CorrelationId
| project
    AGW_TransactionId,
    // --- AGW ---
    StartTime_AGW,
    EndTime_AGW,
    DurationMs_AGW,
    clientIP_s,
    backendIPAddress_s,
    requestUri_s,
    // --- APIM ---
    StartTime_APIM,
    EndTime_APIM,
    DurationMs_APIM,
    apimRequestUri_s,
    callerIpAddress_s
| order by StartTime_AGW asc



// Ex. logs APIM dans AzureDiagnostics, Category="GatewayLogs" (ou "ApiManagementGatewayLogs")
AzureDiagnostics
| where Category == "GatewayLogs"
| where TimeGenerated >= ago(24h)
| extend
    DurationMs = timeTaken_d, 
    StartTime_APIM = TimeGenerated - totimespan(DurationMs * 1ms),
    EndTime_APIM   = TimeGenerated


AzureDiagnostics
| where ResourceType == "NETWORKSECURITYGROUPS"
| where OperationName == "NetworkSecurityGroupFlowEvent"
| where Direction_s == "O"  // O pour Outbound
| where Action_s == "D"     // D pour Deny
| project TimeGenerated, SourceIP_s, DestinationIP_s, DestinationPort_d, Protocol_s, FlowState_s


let currentMonth = startofmonth(now());
let previousMonth = startofmonth(currentMonth - 1d);
Usage
| where TimeGenerated >= previousMonth and TimeGenerated < currentMonth + 1mo
| extend Month = iff(TimeGenerated < currentMonth, "Previous", "Current")
| summarize Cost = sum(PreTaxCost) by MeterCategory, Month
| evaluate pivot(Month, sum(Cost))
| extend Growth = (Current - Previous) / Previous * 100
| where Growth > 5
| project MeterCategory, PreviousCost = Previous, CurrentCost = Current, GrowthPercent = round(Growth, 2)
